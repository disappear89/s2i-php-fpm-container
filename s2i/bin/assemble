#!/bin/bash

set -e

#shopt -s dotglob
echo "---> Installing application source..."

if [ -f /tmp/src/prophet.json ]; then
  echo "Found 'prophet.json', building dependencies using prophet.phar... "

  echo "Create temporary build dir"

  mv /tmp/src build
  cd build

#  if [ -z "$PROD" ]; then
#
#    echo "No prod deployment detected falling back to version dev-master"
#    cat composer.json | jq '. + {"version":"master-dev"}' > composer_version.json
#    mv composer_version.json composer.json
#    echo "Following composer.json was generated:"
#    echo "--------------------------------------"
#    cat composer.json
#    echo "--------------------------------------"
#
#  elif [ "$PROD" = true ]; then
#
#    echo "Prod deployment detected falling back to version 1.0.0"
#    cat composer.json | jq '. + {"version":"1.0.0"}' > composer_version.json
#    mv composer_version.json composer.json
#    echo "Following composer.json was generated:"
#    echo "--------------------------------------"
#    cat composer.json
#    echo "--------------------------------------"
#
#  fi

  RETRIES=6
  for ((i=0; i<$RETRIES; i++)); do
    echo "Downloading $PROPHET_PHAR_URL for ${PROPHET_PUBLISH_TARGET}, attempt $((i+1))/$RETRIES"
    curl -o /tmp/prophet.phar $PROPHET_PHAR_URL && chmod +x /tmp/prophet.phar && break
    sleep 10
  done

  /tmp/prophet.phar package -n
  /tmp/prophet.phar publish -t ${PROPHET_PUBLISH_TARGET}

  echo "Finished prophet build and asset upload to ${PROPHET_PUBLISH_TARGET} => move prophet assets to server root"

  mv .prophet/api-controller ../ || echo "Prophet sources moved"

  cd ../api-controller

  rm -rf ../build
else

  mv /tmp/src/* ./

fi

if [ -f composer.json ]; then
  echo "Found 'composer.json', installing dependencies using composer.phar... "

  # Install Composer
  TEMPFILE=$(mktemp)
  RETRIES=6
  for ((i=0; i<$RETRIES; i++)); do

    if [ -z "$COMPOSER_INSTALLER" ]; then
      export COMPOSER_INSTALLER="https://getcomposer.org/installer"
    fi

    echo "Downloading $COMPOSER_INSTALLER, attempt $((i+1))/$RETRIES"
    curl -o $TEMPFILE $COMPOSER_INSTALLER && break
    sleep 10
  done
  if [[ $i == $RETRIES ]]; then
    echo "Download failed, giving up."
    exit 1
  fi
  php <$TEMPFILE

  if [ "$(ls -a /tmp/artifacts/ 2>/dev/null)" ]; then
    echo "Restoring build artifacts"
    mv /tmp/artifacts/* $HOME/
  fi

  # Change the repo mirror if provided
  if [ -n "$COMPOSER_MIRROR" ]; then
    ./composer.phar config -g repositories.packagist composer $COMPOSER_MIRROR
  fi

  if [ "$COMPOSER_ALLOW_HTTP" = true ]; then
    ./composer.phar config -g secure-http false
  fi

  # Install App dependencies using Composer
  ./composer.phar install --no-interaction --no-ansi --optimize-autoloader $COMPOSER_ARGS

  if [ ! -f composer.lock ]; then
    echo -e "\nConsider adding a 'composer.lock' file into your source repository.\n"
  fi

  rm -rf composer.phar

fi

# Fix source directory permissions
bash fix-permissions ./
